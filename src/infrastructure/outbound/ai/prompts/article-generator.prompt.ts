import { z } from 'zod';
import { zodToJsonSchema } from 'zod-to-json-schema';

import { type GenerateArticlesParams } from '../../../../application/ports/outbound/ai/article-generator.port.js';

import {
    ArticleCategory,
    categorySchema,
} from '../../../../domain/value-objects/article-category.vo.js';
import {
    ArticleContent,
    contentSchema,
} from '../../../../domain/value-objects/article-content.vo.js';
import { ArticleFakeStatus } from '../../../../domain/value-objects/article-fake-status.vo.js';
import {
    ArticleHeadline,
    headlineSchema,
} from '../../../../domain/value-objects/article-headline.vo.js';
import {
    ArticleSummary,
    summarySchema,
} from '../../../../domain/value-objects/article-summary.vo.js';

import { IntroductionPrompt } from './shared/introduction.prompt.js';

/**
 * Base interface for all AI content generators
 */
export interface AIContentGenerator<TInput, TOutput> {
    readonly answerSchema: z.ZodSchema<TOutput>;
    generateInstructions(params: TInput): string;
}

/**
 * Raw article data generated by AI before domain entity creation
 */
// TODO Move to port values
// TODO BUt make this generic instead get the value from the schema directly
export interface GeneratedArticleData {
    headline: ArticleHeadline;
    content: ArticleContent;
    summary: ArticleSummary;
    category: ArticleCategory;
    fakeStatus: ArticleFakeStatus;
}

/**
 * Raw input schema for AI responses before transformation
 */
const rawArticleSchema = z.object({
    category: categorySchema,
    content: contentSchema,
    fakeReason: z.string().nullable().default(null),
    headline: headlineSchema,
    isFake: z.boolean().default(false),
    summary: summarySchema,
});

/**
 * Schema for generated articles from AI with transformations to domain objects
 */
const generatedArticleSchema = z.array(
    rawArticleSchema.transform((data) => ({
        category: ArticleCategory.create(data.category),
        content: ArticleContent.create(data.content),
        fakeStatus: data.isFake
            ? ArticleFakeStatus.createFake(data.fakeReason!)
            : ArticleFakeStatus.createNonFake(),
        headline: ArticleHeadline.create(data.headline),
        summary: ArticleSummary.create(data.summary),
    })),
) as unknown as z.ZodSchema<GeneratedArticleData[]>;

/**
 * Article content generator class
 */
export class ArticleGeneratorPrompt
    implements AIContentGenerator<GenerateArticlesParams, GeneratedArticleData[]>
{
    public readonly answerSchema = generatedArticleSchema;

    /**
     * Returns the raw input schema expected from the AI,
     * before any transformations are applied
     */
    private getRawInputSchema() {
        return z.array(rawArticleSchema);
    }

    /**
     * Returns a human-readable description of the schema structure
     */
    private getSchemaDescription() {
        const jsonSchema = zodToJsonSchema(this.getRawInputSchema(), {
            $refStrategy: 'none',
            definitionPath: 'schemas',
        });

        return JSON.stringify(jsonSchema, null, 2);
    }

    public generateInstructions({
        articles: { news, publicationHistory },
        language,
        count,
    }: GenerateArticlesParams): string {
        const languageLabel = language.toString();

        return `${IntroductionPrompt.GAME_CONTEXT}

Generate exactly ${count} articles in total, with a nice balance between fake and real articles.

For REAL articles:
- Use headlines that capture the essence of the original but rephrase them to be around 8-12 words
- Keep the original language (${languageLabel}) of the headlines and content
- Add interesting but factual details that make the story engaging
- Keep the tone professional and journalistic
- Include relevant context and factual background

For FICTIONAL articles (generate at least 2 fake articles):
- Base fake stories on current real events and trends from the original headlines
- Use the same journalistic style and tone as real news sources
- Include accurate names of real organizations, places, and public figures
- Create plausible extensions or developments of real current events
- Add subtle twists that require fact-checking to disprove
- Mix in accurate background details with the fictional elements
- Make the fictional elements logically consistent with current reality
- Avoid sensational or outlandish claims that would immediately raise suspicion
- Use realistic quotes and statistics that seem credible
- Keep the story within the realm of possibility given the current context

Schema: ${this.getSchemaDescription()}

Original headlines to draw inspiration from:
${JSON.stringify(news)}

Recently generated articles to avoid duplicating:
${JSON.stringify(publicationHistory)}

Important guidelines:
- Create unique headlines different from both original and recent articles
- Headlines should be clear and around 8-12 words long
- Maintain consistent professional tone across all articles
- Write all content in ${languageLabel}
- Use proper journalistic style and structure
- Include relevant context and background information
- For fake articles, ensure the fictional elements are subtle and plausible
- Make fact-checking necessary to distinguish real from fake
- Avoid obvious patterns that could give away fake articles
- Return only valid JSON`;
    }
}
